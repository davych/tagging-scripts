{"version":3,"file":"tagging-scripts.cjs.production.min.js","sources":["../src/utils.ts","../src/auth.ts","../src/infos.ts","../src/dynamic.ts","../src/push.ts","../src/pageble.ts","../src/helpers.ts","../src/index.ts","../src/clickable.ts"],"sourcesContent":["import { isObject, reduce, merge } from 'lodash';\n\nlet __TaggingConfiguration: any;\n\nexport const flattenKeys = (\n  obj: Record<string, unknown>,\n  path: string[] = []\n): Record<string, string> =>\n  !isObject(obj)\n    ? { [path.join('.')]: obj }\n    : reduce(\n        obj,\n        (cum: any, next: any, key: any) =>\n          merge(\n            cum,\n            flattenKeys(next as Record<string, unknown>, [...path, key])\n          ),\n        {}\n      );\n\nexport const replace = (str: string, obj: any) =>\n  str.replaceAll(/\\{([^}]+)\\}/gi, (_, a) =>\n    a.split('.').reduce((b: any, c: any) => b?.[c], obj)\n  );\nexport const getPictureFromDom = (domTarget: any) => {\n  const { dataset, classList = [], id } = domTarget;\n  return {\n    dataset,\n    classList,\n    id,\n  };\n};\n\nexport const getPathname = (locationInstance?: any) => {\n  const location = locationInstance || window.location;\n  const { hash } = getAppConfig();\n  if (hash) {\n    return location.hash.replace('#', '');\n  }\n  return location.pathname;\n};\n\nexport const getAppConfig = () => {\n  return __TaggingConfiguration;\n};\n\nexport const setAppConfig = (config: any) => {\n  __TaggingConfiguration = config;\n};\n\nexport const updateInfos = (infos: any) => {\n  if (!__TaggingConfiguration.infos) {\n    __TaggingConfiguration.infos = {};\n  }\n  merge(__TaggingConfiguration.infos, infos);\n};\n\nexport const updateAuth = (auth: any) => {\n  if (!__TaggingConfiguration.auth) {\n    __TaggingConfiguration.auth = {};\n  }\n  merge(__TaggingConfiguration.auth, auth);\n};\n","import * as utils from './utils';\n\nexport const getData = (): any => {\n  return utils.getAppConfig().auth || {};\n};\n","import * as utils from './utils';\n\nexport const getData = () => {\n  return utils.getAppConfig().infos || {};\n};\n","import { set, get } from 'lodash';\nlet dynamic: any = {};\n\nexport const getData = (key: string): any => {\n  return get(dynamic, key, {});\n};\n\nexport const setData = (key: string, data: any) => {\n  set(dynamic, key, data);\n};\n","import { set, get } from 'lodash';\nimport * as utils from './utils';\n\nexport const pushEvent = (scope: any, data: any) => {\n  const { eventLabel, pushTargets = {} } = utils.getAppConfig();\n  // push event\n  set(window, '__TAG_DATA__LAYER', data);\n\n  const eventName = get(scope, eventLabel, scope.type || 'event');\n\n  const targetPipe: string[] = Object.values(pushTargets);\n  targetPipe.forEach(pushFn => {\n    // new function with event name and data as arguments\n    const pushFnWithArgs = new Function('eventName', 'data', pushFn);\n    pushFnWithArgs(eventName, data);\n  });\n};\n","import * as utils from './utils';\nimport * as auth from './auth';\nimport * as infos from './infos';\nimport * as R from 'ramda';\nimport { isEmpty, merge, set } from 'lodash';\nimport * as dynamic from './dynamic';\nimport * as push from './push';\n\nexport const runJob = () => {\n  const page = getActivedPage();\n  if (!page || !isEmpty(page?.dynamicKeys)) {\n    return;\n  }\n  const output = getRuleOutput(true);\n  if (isEmpty(output)) {\n    return;\n  }\n  push.pushEvent(page, output);\n};\n\nexport const runJobWithDynamicData = () => {\n  const output = getRuleOutput(true);\n  if (isEmpty(output)) {\n    return;\n  }\n  push.pushEvent(getActivedPage(), output);\n};\n\nexport const findPage = R.memoizeWith(R.toUpper, (identifier: string): any => {\n  const config = utils.getAppConfig();\n  return R.find(R.propEq(identifier, 'id'))(config.pages);\n});\n\nexport const getActivedPage = () => {\n  const pathname = utils.getPathname();\n  const page = findPage(pathname);\n  if (!page) {\n    return;\n  }\n  return page;\n};\n\nexport const getActivePageTag = () => {\n  const page = getActivedPage();\n  if (!page) {\n    return;\n  }\n  return page.tag;\n};\n\nexport const getRuleOutput = (decode?: boolean) => {\n  const page = getActivedPage();\n  if (!page) {\n    return;\n  }\n  const { rules, tag, dynamicKeys = [] } = page;\n  const dynamicData = dynamic.getData(utils.getPathname());\n  const data = merge({}, dynamicData, tag, auth.getData(), infos.getData());\n  if (!isEmpty(dynamicKeys)) {\n    const keysOfCurrentPage = Object.keys(dynamicData);\n    const diff = R.difference(dynamicKeys, keysOfCurrentPage);\n    if (!R.isEmpty(diff)) {\n      console.warn('[page]missing dynamic keys', diff);\n    }\n  }\n  // pending runtime data\n  const flattenRules = utils.flattenKeys(rules);\n  const output = R.mapObjIndexed(value => {\n    if (value.startsWith('return')) {\n      const vauleFunc = new Function('data', value);\n      return vauleFunc(data);\n    }\n    return utils.replace(value, data);\n  }, flattenRules);\n\n  if (decode) {\n    const decodeOutput = {};\n    R.forEachObjIndexed((value, key) => {\n      set(decodeOutput, key, value);\n    }, output);\n    return decodeOutput;\n  }\n\n  return output;\n};\n","import * as pageble from './pageble';\nimport * as utils from './utils';\nimport * as dynamic from './dynamic';\n\nexport const updateDynamicData = (data: any) => {\n  const pathname = utils.getPathname();\n  dynamic.setData(pathname, data);\n  // update dynamic data\n  pageble.runJobWithDynamicData();\n};\n\nexport const updateAuth = (auth: any) => {\n  utils.updateAuth(auth);\n};\n\nexport const updateInfos = (infos: any) => {\n  utils.updateInfos(infos);\n};\n","// import config from './config';\nimport { debounce } from 'lodash';\nimport * as clickable from './clickable';\nimport * as pageble from './pageble';\nimport * as utils from './utils';\nimport * as tagHelpers from './helpers';\n\nconst taggingRun = (__TaggingConfiguration: any) => {\n  if (__TaggingConfiguration) {\n    console.log('Tagging is running');\n    utils.setAppConfig(__TaggingConfiguration);\n    var pushState = window.history.pushState;\n    window.history.pushState = function() {\n      const beforeIdentifier = utils.getPathname(window.location);\n      pushState.apply(window.history, arguments as any);\n      const afterIdentifier = utils.getPathname(window.location);\n      if (beforeIdentifier !== afterIdentifier) {\n        debounce(pageble.runJob, 100)();\n      }\n    };\n\n    window.addEventListener('popstate', () => {\n      pageble.runJob();\n    });\n\n    document.addEventListener(\n      'click',\n      e => {\n        clickable.runJob(utils.getPictureFromDom(e.target));\n      },\n      true\n    );\n  }\n};\n\nexport default taggingRun;\nexport { tagHelpers };\n","import * as R from 'ramda';\nimport * as pageble from './pageble';\nimport * as utils from './utils';\nimport * as auth from './auth';\nimport * as infos from './infos';\nimport { isEmpty, merge, set } from 'lodash';\nimport * as push from './push';\nimport * as dynamic from './dynamic';\n\nexport const runJob = ({ dataset = {}, classList = [], id }: any) => {\n  // get actived page\n  const page = pageble.getActivedPage();\n  if (!page) {\n    return;\n  }\n\n  // get actived button\n  const button = getTargetButton({ classList, id }, page);\n\n  if (!button) {\n    return;\n  }\n  // get page output, get button output\n  const resultOfPage = pageble.getRuleOutput() || {};\n  const resultOfButton = getRuleOutput(button, false, dataset);\n  const result = merge({}, resultOfPage, resultOfButton);\n\n  const data = {};\n  R.forEachObjIndexed((value, key) => {\n    set(data, key, value);\n  }, result);\n\n  push.pushEvent(button, data);\n};\n\nexport const getRuleOutput = (button: any, decode: boolean, dataset: any) => {\n  const { rules, tag, dynamicKeys = [] } = button;\n\n  if (!isEmpty(dynamicKeys)) {\n    const keysOfCurrentButton = Object.keys(dataset);\n    const diff = R.difference(dynamicKeys, keysOfCurrentButton);\n    if (!R.isEmpty(diff)) {\n      console.warn('[clickable]missing dynamic keys', diff);\n    }\n  }\n\n  const pageTag = pageble.getActivePageTag();\n  const dynamicData = dynamic.getData(utils.getPathname());\n  const data = merge(\n    {},\n    dynamicData,\n    dataset,\n    pageTag,\n    tag,\n    auth.getData(),\n    infos.getData()\n  );\n  const flattenRules = utils.flattenKeys(rules);\n  const output = R.mapObjIndexed(value => {\n    if (value.startsWith('return')) {\n      const vauleFunc = new Function('data', value);\n      return vauleFunc(data);\n    }\n    return utils.replace(value, data);\n  }, flattenRules);\n\n  if (decode) {\n    const decodeOutput = {};\n    R.forEachObjIndexed((value, key) => {\n      set(decodeOutput, key, value);\n    }, output);\n    return decodeOutput;\n  }\n  return output;\n};\n\nexport const getTargetButton = (picture: any, page?: any) => {\n  if (!page) {\n    page = pageble.getActivedPage();\n  }\n  if (!page) {\n    return;\n  }\n  const button: any = R.find(\n    R.anyPass([\n      R.propEq(picture.id, 'id'),\n      R.propSatisfies(v => picture.classList?.contains(v), 'class'),\n    ])\n  )(page.actions.clicks);\n\n  if (!button) {\n    return;\n  }\n  return button;\n};\n"],"names":["__TaggingConfiguration","flattenKeys","obj","path","isObject","reduce","cum","next","key","merge","concat","_ref","join","replace","str","replaceAll","_","a","split","b","c","getPathname","locationInstance","location","window","getAppConfig","hash","pathname","setAppConfig","config","getData","utils","auth","infos","dynamic","get","pushEvent","scope","data","_utils$getAppConfig","eventLabel","_utils$getAppConfig$p","pushTargets","set","eventName","type","Object","values","forEach","pushFn","Function","pushFnWithArgs","runJob","page","getActivedPage","isEmpty","dynamicKeys","output","getRuleOutput","push","findPage","R","identifier","pages","decode","rules","tag","_page$dynamicKeys","dynamicData","keysOfCurrentPage","keys","diff","console","warn","flattenRules","value","startsWith","vauleFunc","decodeOutput","log","pushState","history","beforeIdentifier","apply","arguments","afterIdentifier","debounce","pageble","addEventListener","document","e","domTarget","_domTarget$classList","dataset","_ref$dataset","_ref$classList","classList","id","button","picture","v","_picture$classList","contains","actions","clicks","getTargetButton","resultOfPage","resultOfButton","_button$dynamicKeys","keysOfCurrentButton","pageTag","result","clickable","target"],"mappings":"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"}