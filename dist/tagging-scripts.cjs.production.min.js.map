{"version":3,"file":"tagging-scripts.cjs.production.min.js","sources":["../src/utils.ts","../src/auth.ts","../src/infos.ts","../src/dynamic.ts","../src/push.ts","../src/pageble.ts","../src/index.ts","../src/clickable.ts"],"sourcesContent":["import { isObject, reduce, merge } from 'lodash';\n\nlet __TaggingConfiguration: any;\n\nexport const flattenKeys = (\n  obj: Record<string, unknown>,\n  path: string[] = []\n): Record<string, string> =>\n  !isObject(obj)\n    ? { [path.join('.')]: obj }\n    : reduce(\n        obj,\n        (cum: any, next: any, key: any) =>\n          merge(\n            cum,\n            flattenKeys(next as Record<string, unknown>, [...path, key])\n          ),\n        {}\n      );\n\nexport const replace = (str: string, obj: any) =>\n  str.replaceAll(/\\{([^}]+)\\}/gi, (_, a) =>\n    a.split('.').reduce((b: any, c: any) => b?.[c], obj)\n  );\nexport const getPictureFromDom = (domTarget: any) => {\n  const { dataset, classList = [], id } = domTarget;\n  return {\n    dataset,\n    classList,\n    id,\n  };\n};\n\nexport const getPathname = (locationInstance?: any) => {\n  const location = locationInstance || window.location;\n  const { hash } = getAppConfig();\n  if (hash) {\n    return location.hash.replace('#', '');\n  }\n  return location.pathname;\n};\n\nexport const getAppConfig = () => {\n  return __TaggingConfiguration;\n};\n\nexport const setAppConfig = (config: any) => {\n  __TaggingConfiguration = config;\n};\n","import * as utils from './utils';\n\nlet auth: any;\n\nexport const getData = (): any => {\n  return auth || utils.getAppConfig().auth || {};\n};\n\nexport const setData = (data: any) => {\n  auth = data;\n};\n","import * as utils from './utils';\n\nlet infos: any;\n\nexport const getData = () => {\n  return infos || utils.getAppConfig().infos || {};\n};\n\nexport const setData = (data: any) => {\n  infos = data;\n};\n","import { set, get } from 'lodash';\nlet dynamic: any = {};\n\nexport const getData = (key: string): any => {\n  return get(dynamic, key, {});\n};\n\nexport const setData = (key: string, data: any) => {\n  set(dynamic, key, data);\n};\n","import { set, get } from 'lodash';\nimport * as utils from './utils';\n\nexport const pushEvent = (scope: any, data: any) => {\n  const { eventLabel, pushTargets = {} } = utils.getAppConfig();\n  // push event\n  set(window, '__TAG_DATA__LAYER', data);\n\n  const eventName = get(scope, eventLabel, scope.type || 'event');\n\n  const targetPipe: string[] = Object.values(pushTargets);\n  targetPipe.forEach(pushFn => {\n    // new function with event name and data as arguments\n    const pushFnWithArgs = new Function('eventName', 'data', pushFn);\n    pushFnWithArgs(eventName, data);\n  });\n};\n","import * as utils from './utils';\nimport * as auth from './auth';\nimport * as infos from './infos';\nimport * as R from 'ramda';\nimport { isEmpty, merge, set } from 'lodash';\nimport * as dynamic from './dynamic';\nimport * as push from './push';\n\nexport const runJob = () => {\n  const page = getActivedPage();\n  if (!page || !isEmpty(page?.dynamicKeys)) {\n    return;\n  }\n  const output = getRuleOutput(true);\n  if (isEmpty(output)) {\n    return;\n  }\n  push.pushEvent(page, output);\n};\n\nexport const runJobWithDynamicData = () => {\n  const output = getRuleOutput(true);\n  if (isEmpty(output)) {\n    return;\n  }\n  push.pushEvent(getActivedPage(), output);\n};\n\nexport const findPage = R.memoizeWith(R.toUpper, (identifier: string): any => {\n  const config = utils.getAppConfig();\n  return R.find(R.propEq(identifier, 'id'))(config.pages);\n});\n\nexport const getActivedPage = () => {\n  const pathname = utils.getPathname();\n  const page = findPage(pathname);\n  if (!page) {\n    return;\n  }\n  return page;\n};\n\nexport const getActivePageTag = () => {\n  const page = getActivedPage();\n  if (!page) {\n    return;\n  }\n  return page.tag;\n};\n\nexport const getRuleOutput = (decode?: boolean) => {\n  const page = getActivedPage();\n  if (!page) {\n    return;\n  }\n  const { rules, tag, dynamicKeys } = page;\n  const dynamicData = dynamic.getData(utils.getPathname());\n  const data = merge({}, dynamicData, tag, auth.getData(), infos.getData());\n  if (!R.isEmpty(dynamicKeys)) {\n    const keysOfCurrentPage = Object.keys(dynamicData);\n    const diff = R.difference(dynamicKeys, keysOfCurrentPage);\n    if (!R.isEmpty(diff)) {\n      console.warn('[page]missing dynamic keys', diff);\n    }\n  }\n  // pending runtime data\n  const flattenRules = utils.flattenKeys(rules);\n  const output = R.mapObjIndexed(value => {\n    return utils.replace(value, data);\n  }, flattenRules);\n\n  if (decode) {\n    const decodeOutput = {};\n    R.forEachObjIndexed((value, key) => {\n      set(decodeOutput, key, value);\n    }, output);\n    return decodeOutput;\n  }\n\n  return output;\n};\n","// import config from './config';\nimport * as clickable from './clickable';\nimport * as pageble from './pageble';\nimport * as utils from './utils';\n\nconst taggingRun = (__TaggingConfiguration: any) => {\n  if (__TaggingConfiguration) {\n    console.log('Tagging is running');\n    utils.setAppConfig(__TaggingConfiguration);\n    var pushState = window.history.pushState;\n    window.history.pushState = function() {\n      const beforeIdentifier = utils.getPathname(window.location);\n      pushState.apply(window.history, arguments as any);\n      const afterIdentifier = utils.getPathname(window.location);\n      if (beforeIdentifier !== afterIdentifier) {\n        pageble.runJob();\n      }\n    };\n\n    window.addEventListener('popstate', () => {\n      pageble.runJob();\n    });\n\n    document.addEventListener(\n      'click',\n      e => {\n        clickable.runJob(utils.getPictureFromDom(e.target));\n      },\n      true\n    );\n  }\n};\n\nexport default taggingRun;\n","import * as R from 'ramda';\nimport * as pageble from './pageble';\nimport * as utils from './utils';\nimport * as auth from './auth';\nimport * as infos from './infos';\nimport { merge, set } from 'lodash';\nimport * as push from './push';\n\nexport const runJob = ({ dataset = {}, classList, id }: any) => {\n  // get actived page\n  const page = pageble.getActivedPage();\n  if (!page) {\n    return;\n  }\n\n  // get actived button\n  const button = getTargetButton({ classList, id }, page);\n\n  if (!button) {\n    return;\n  }\n  // get page output, get button output\n  const resultOfPage = pageble.getRuleOutput() || {};\n  const resultOfButton = getRuleOutput(button, false, dataset);\n  const result = merge({}, resultOfPage, resultOfButton);\n\n  const data = {};\n  R.forEachObjIndexed((value, key) => {\n    set(data, key, value);\n  }, result);\n\n  push.pushEvent(button, data);\n};\n\nexport const getRuleOutput = (button: any, decode: boolean, dataset: any) => {\n  const { rules, tag, dynamicKeys } = button;\n\n  if (!R.isEmpty(dynamicKeys)) {\n    const keysOfCurrentButton = Object.keys(dataset);\n    const diff = R.difference(dynamicKeys, keysOfCurrentButton);\n    if (!R.isEmpty(diff)) {\n      console.warn('[clickable]missing dynamic keys', diff);\n    }\n  }\n\n  const pageTag = pageble.getActivePageTag();\n  const data = merge(\n    {},\n    dataset,\n    pageTag,\n    tag,\n    auth.getData(),\n    infos.getData()\n  );\n  // pending runtime data\n  const flattenRules = utils.flattenKeys(rules);\n  const output = R.mapObjIndexed(value => {\n    return utils.replace(value, data);\n  }, flattenRules);\n\n  if (decode) {\n    const decodeOutput = {};\n    R.forEachObjIndexed((value, key) => {\n      set(decodeOutput, key, value);\n    }, output);\n    return decodeOutput;\n  }\n  return output;\n};\n\nexport const getTargetButton = (picture: any, page?: any) => {\n  if (!page) {\n    page = pageble.getActivedPage();\n  }\n  if (!page) {\n    return;\n  }\n  const button: any = R.find(\n    R.anyPass([\n      R.propEq(picture.id, 'id'),\n      R.propSatisfies(v => picture.classList?.contains(v), 'class'),\n    ])\n  )(page.actions.clicks);\n\n  if (!button) {\n    return;\n  }\n  return button;\n};\n"],"names":["__TaggingConfiguration","flattenKeys","obj","path","isObject","reduce","cum","next","key","merge","concat","_ref","join","replace","str","replaceAll","_","a","split","b","c","getPathname","locationInstance","location","window","getAppConfig","hash","pathname","setAppConfig","config","getData","utils","auth","infos","dynamic","pushEvent","scope","data","_utils$getAppConfig","eventLabel","_utils$getAppConfig$p","pushTargets","set","eventName","get","type","Object","values","forEach","pushFn","Function","pushFnWithArgs","runJob","page","getActivedPage","isEmpty","dynamicKeys","output","getRuleOutput","push","findPage","R","identifier","pages","decode","rules","tag","dynamicData","keysOfCurrentPage","keys","diff","console","warn","flattenRules","value","decodeOutput","log","pushState","history","beforeIdentifier","apply","arguments","afterIdentifier","pageble","addEventListener","document","e","domTarget","_domTarget$classList","dataset","_ref$dataset","classList","id","button","picture","v","_picture$classList","contains","actions","clicks","getTargetButton","resultOfPage","resultOfButton","keysOfCurrentButton","pageTag","result","clickable","target"],"mappings":"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"}