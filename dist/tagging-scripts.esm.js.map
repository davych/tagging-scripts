{"version":3,"file":"tagging-scripts.esm.js","sources":["../src/utils.ts","../src/auth.ts","../src/infos.ts","../src/dynamic.ts","../src/push.ts","../src/pageble.ts","../src/clickable.ts","../src/index.ts"],"sourcesContent":["import { isObject, reduce, merge } from 'lodash';\n\nlet __TaggingConfiguration: any;\n\nexport const flattenKeys = (\n  obj: Record<string, unknown>,\n  path: string[] = []\n): Record<string, string> =>\n  !isObject(obj)\n    ? { [path.join('.')]: obj }\n    : reduce(\n        obj,\n        (cum: any, next: any, key: any) =>\n          merge(\n            cum,\n            flattenKeys(next as Record<string, unknown>, [...path, key])\n          ),\n        {}\n      );\n\nexport const replace = (str: string, obj: any) =>\n  str.replaceAll(/\\{([^}]+)\\}/gi, (_, a) =>\n    a.split('.').reduce((b: any, c: any) => b?.[c], obj)\n  );\nexport const getPictureFromDom = (domTarget: any) => {\n  const { dataset, classList = [], id } = domTarget;\n  return {\n    dataset,\n    classList,\n    id,\n  };\n};\n\nexport const getPathname = (locationInstance?: any) => {\n  const location = locationInstance || window.location;\n  const { hash } = getAppConfig();\n  if (hash) {\n    return location.hash.replace('#', '');\n  }\n  return location.pathname;\n};\n\nexport const getAppConfig = () => {\n  return __TaggingConfiguration;\n};\n\nexport const setAppConfig = (config: any) => {\n  __TaggingConfiguration = config;\n};\n","import * as utils from './utils';\n\nlet auth: any;\n\nexport const getData = (): any => {\n  return auth || utils.getAppConfig().auth || {};\n};\n\nexport const setData = (data: any) => {\n  auth = data;\n};\n","import * as utils from './utils';\n\nlet infos: any;\n\nexport const getData = () => {\n  return infos || utils.getAppConfig().infos || {};\n};\n\nexport const setData = (data: any) => {\n  infos = data;\n};\n","import { set, get } from 'lodash';\nlet dynamic: any = {};\n\nexport const getData = (key: string): any => {\n  return get(dynamic, key, {});\n};\n\nexport const setData = (key: string, data: any) => {\n  set(dynamic, key, data);\n};\n","import { set, get } from 'lodash';\nimport * as utils from './utils';\n\nexport const pushEvent = (scope: any, data: any) => {\n  const { eventLabel, pushTargets = {} } = utils.getAppConfig();\n  // push event\n  set(window, '__TAG_DATA__LAYER', data);\n\n  const eventName = get(scope, eventLabel, scope.type || 'event');\n\n  const targetPipe: string[] = Object.values(pushTargets);\n  targetPipe.forEach(pushFn => {\n    // new function with event name and data as arguments\n    const pushFnWithArgs = new Function('eventName', 'data', pushFn);\n    pushFnWithArgs(eventName, data);\n  });\n};\n","import * as utils from './utils';\nimport * as auth from './auth';\nimport * as infos from './infos';\nimport * as R from 'ramda';\nimport { isEmpty, merge, set } from 'lodash';\nimport * as dynamic from './dynamic';\nimport * as push from './push';\n\nexport const runJob = () => {\n  const page = getActivedPage();\n  if (!page || !isEmpty(page?.dynamicKeys)) {\n    return;\n  }\n  const output = getRuleOutput(true);\n  if (isEmpty(output)) {\n    return;\n  }\n  push.pushEvent(page, output);\n};\n\nexport const runJobWithDynamicData = () => {\n  const output = getRuleOutput(true);\n  if (isEmpty(output)) {\n    return;\n  }\n  push.pushEvent(getActivedPage(), output);\n};\n\nexport const findPage = R.memoizeWith(R.toUpper, (identifier: string): any => {\n  const config = utils.getAppConfig();\n  return R.find(R.propEq(identifier, 'id'))(config.pages);\n});\n\nexport const getActivedPage = () => {\n  const pathname = utils.getPathname();\n  const page = findPage(pathname);\n  if (!page) {\n    return;\n  }\n  return page;\n};\n\nexport const getActivePageTag = () => {\n  const page = getActivedPage();\n  if (!page) {\n    return;\n  }\n  return page.tag;\n};\n\nexport const getRuleOutput = (decode?: boolean) => {\n  const page = getActivedPage();\n  if (!page) {\n    return;\n  }\n  const { rules, tag, dynamicKeys } = page;\n  const dynamicData = dynamic.getData(utils.getPathname());\n  const data = merge({}, dynamicData, tag, auth.getData(), infos.getData());\n  if (!R.isEmpty(dynamicKeys)) {\n    const keysOfCurrentPage = Object.keys(dynamicData);\n    const diff = R.difference(dynamicKeys, keysOfCurrentPage);\n    if (!R.isEmpty(diff)) {\n      console.warn('[page]missing dynamic keys', diff);\n    }\n  }\n  // pending runtime data\n  const flattenRules = utils.flattenKeys(rules);\n  const output = R.mapObjIndexed(value => {\n    return utils.replace(value, data);\n  }, flattenRules);\n\n  if (decode) {\n    const decodeOutput = {};\n    R.forEachObjIndexed((value, key) => {\n      set(decodeOutput, key, value);\n    }, output);\n    return decodeOutput;\n  }\n\n  return output;\n};\n","import * as R from 'ramda';\nimport * as pageble from './pageble';\nimport * as utils from './utils';\nimport * as auth from './auth';\nimport * as infos from './infos';\nimport { merge, set } from 'lodash';\nimport * as push from './push';\n\nexport const runJob = ({ dataset = {}, classList, id }: any) => {\n  // get actived page\n  const page = pageble.getActivedPage();\n  if (!page) {\n    return;\n  }\n\n  // get actived button\n  const button = getTargetButton({ classList, id }, page);\n\n  if (!button) {\n    return;\n  }\n  // get page output, get button output\n  const resultOfPage = pageble.getRuleOutput() || {};\n  const resultOfButton = getRuleOutput(button, false, dataset);\n  const result = merge({}, resultOfPage, resultOfButton);\n\n  const data = {};\n  R.forEachObjIndexed((value, key) => {\n    set(data, key, value);\n  }, result);\n\n  push.pushEvent(button, data);\n};\n\nexport const getRuleOutput = (button: any, decode: boolean, dataset: any) => {\n  const { rules, tag, dynamicKeys } = button;\n\n  if (!R.isEmpty(dynamicKeys)) {\n    const keysOfCurrentButton = Object.keys(dataset);\n    const diff = R.difference(dynamicKeys, keysOfCurrentButton);\n    if (!R.isEmpty(diff)) {\n      console.warn('[clickable]missing dynamic keys', diff);\n    }\n  }\n\n  const pageTag = pageble.getActivePageTag();\n  const data = merge(\n    {},\n    dataset,\n    pageTag,\n    tag,\n    auth.getData(),\n    infos.getData()\n  );\n  // pending runtime data\n  const flattenRules = utils.flattenKeys(rules);\n  const output = R.mapObjIndexed(value => {\n    return utils.replace(value, data);\n  }, flattenRules);\n\n  if (decode) {\n    const decodeOutput = {};\n    R.forEachObjIndexed((value, key) => {\n      set(decodeOutput, key, value);\n    }, output);\n    return decodeOutput;\n  }\n  return output;\n};\n\nexport const getTargetButton = (picture: any, page?: any) => {\n  if (!page) {\n    page = pageble.getActivedPage();\n  }\n  if (!page) {\n    return;\n  }\n  const button: any = R.find(\n    R.anyPass([\n      R.propEq(picture.id, 'id'),\n      R.propSatisfies(v => picture.classList?.contains(v), 'class'),\n    ])\n  )(page.actions.clicks);\n\n  if (!button) {\n    return;\n  }\n  return button;\n};\n","// import config from './config';\nimport * as clickable from './clickable';\nimport * as pageble from './pageble';\nimport * as utils from './utils';\n\nconst taggingRun = (__TaggingConfiguration: any) => {\n  if (__TaggingConfiguration) {\n    console.log('Tagging is running');\n\n    var pushState = window.history.pushState;\n    window.history.pushState = function() {\n      const beforeIdentifier = utils.getPathname(window.location);\n      pushState.apply(window.history, arguments as any);\n      const afterIdentifier = utils.getPathname(window.location);\n      if (beforeIdentifier !== afterIdentifier) {\n        pageble.runJob();\n      }\n    };\n\n    window.addEventListener('popstate', () => {\n      pageble.runJob();\n    });\n\n    document.addEventListener(\n      'click',\n      e => {\n        clickable.runJob(utils.getPictureFromDom(e.target));\n      },\n      true\n    );\n  }\n};\n\nexport default taggingRun;\n"],"names":["__TaggingConfiguration","flattenKeys","obj","path","isObject","_ref","join","reduce","cum","next","key","merge","concat","replace","str","replaceAll","_","a","split","b","c","getPictureFromDom","domTarget","dataset","_domTarget$classList","classList","id","getPathname","locationInstance","location","window","pathname","getAppConfig","getData","auth","infos","dynamic","get","pushEvent","scope","data","_utils$getAppConfig","utils","eventLabel","_utils$getAppConfig$p","pushTargets","set","eventName","type","targetPipe","Object","values","forEach","pushFn","pushFnWithArgs","Function","runJob","page","getActivedPage","isEmpty","dynamicKeys","output","getRuleOutput","push","findPage","R","identifier","config","pages","getActivePageTag","tag","decode","rules","dynamicData","keysOfCurrentPage","keys","diff","console","warn","flattenRules","value","decodeOutput","_ref$dataset","pageble","button","getTargetButton","resultOfPage","resultOfButton","result","keysOfCurrentButton","pageTag","picture","v","_picture$classList","contains","actions","clicks","taggingRun","log","pushState","history","beforeIdentifier","apply","arguments","afterIdentifier","addEventListener","document","e","clickable","target"],"mappings":"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"}
